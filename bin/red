#!/usr/bin/env ruby
# Red's command line transliterator executable.
# 
# Copyright (c) 2008 Jesse Sielaff.

begin
  require 'rubygems'
rescue LoadError
  # no rubygems to load, so we fail silently
end

require 'red'
require 'red/executable'
require 'red/version'
require 'optparse'

include Red

parser = OptionParser.new do |opts|
  opts.banner = RED_MESSAGES[:banner]
  opts.separator ""
  opts.on("-h", "--help", "Show this help message.") { puts opts; exit }
  opts.on("-r", "--rails", "Add Red plugin to ./vendor/plugins") { build_red_plugin_for_rails }
  opts.on("-s", "--string=RUBY_STRING", "Translate a single string to JavaScript.") { |string| direct_translate(string) }
  opts.on("-v", "--version", "Print version number.") { puts Red::VERSION::STRING; exit }
  begin
    opts.parse!(ARGV)
  rescue OptionParser::InvalidOption => e
    puts RED_MESSAGES[:invalid] % [e.message]; exit
  rescue OptionParser::MissingArgument => e
    puts RED_MESSAGES[:missing] % [e.message]; exit
  end
end

if ARGV.empty?
  puts RED_MESSAGES[:usage]; exit
else
  class << Red
    self.compile_red_to_js(ARGV[0])
  end
end
